# SSL生产环境部署配置
# 使用方法: docker-compose -f docker-compose.ssl.yml up -d

services:
  # 新闻抓取应用服务 (SSL版本)
  idsgnews:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: idsgnews-app-ssl
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # 持久化数据库文件
      - ./data:/app/public
      # 持久化日志文件
      - ./logs:/app/logs
      # SSL证书文件
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
      # SSL Nginx配置
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx-ssl.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      # 环境变量配置
      - NODE_ENV=production
      - TZ=Asia/Shanghai
      # 新闻抓取配置
      - NEWS_UPDATE_INTERVAL=14400  # 30分钟
      - MAX_NEWS_ITEMS=100
      - LOG_LEVEL=INFO
      # SSL相关环境变量
      - ENABLE_SSL=true
      - DOMAIN=${DOMAIN:-your-domain.com}
      - EMAIL=${EMAIL:-your-email@example.com}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - idsgnews-network
    depends_on:
      - certbot

  # Certbot SSL证书服务
  certbot:
    image: certbot/certbot:latest
    container_name: idsgnews-certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/logs:/var/log/letsencrypt
    environment:
      - DOMAIN=${DOMAIN:-your-domain.com}
      - EMAIL=${EMAIL:-your-email@example.com}
    # 初始获取证书的命令
    entrypoint: ["/bin/sh", "-c"]
    command: >
      '
      if [ ! -f /etc/letsencrypt/live/$$DOMAIN/fullchain.pem ]; then
        echo "获取新的SSL证书..."
        certbot certonly --webroot --webroot-path=/var/www/certbot --email $$EMAIL --agree-tos --no-eff-email --staging -d $$DOMAIN -d www.$$DOMAIN
      else
        echo "SSL证书已存在，跳过获取步骤"
      fi
      '
    networks:
      - idsgnews-network

  # 证书自动续期服务
  certbot-renew:
    image: certbot/certbot:latest
    container_name: idsgnews-certbot-renew
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./certbot/logs:/var/log/letsencrypt
    environment:
      - DOMAIN=${DOMAIN:-your-domain.com}
    # 每12小时检查一次证书续期
    command: >
      sh -c '
        while true; do
          echo "检查SSL证书续期..."
          certbot renew --quiet
          echo "下次检查时间: $(date -d "+12 hours")"
          sleep 43200
        done
      '
    networks:
      - idsgnews-network
    restart: unless-stopped
    depends_on:
      - certbot

networks:
  idsgnews-network:
    driver: bridge

volumes:
  # SSL证书数据卷
  certbot_conf:
    driver: local
  certbot_www:
    driver: local
  certbot_logs:
    driver: local
  
  # 应用数据卷
  idsgnews_data:
    driver: local